% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/direction_to_centroid.R
\name{direction_to_centroid}
\alias{direction_to_centroid}
\title{Direction to group centroid}
\usage{
direction_to_centroid(DT = NULL, coords = NULL)
}
\arguments{
\item{DT}{input data.table with centroid columns generated by eg.
\code{centroid_group}}

\item{coords}{character vector of X coordinate and Y coordinate column names.
Note: the order is assumed X followed by Y column names.}
}
\value{
\code{direction_to_centroid} returns the input \code{DT} appended
with a \code{direction_centroid} column indicating the direction to group
centroid in radians. The direction is measured in radians in the range
of 0 to 2 * pi from the positive x-axis.

A message is returned when \code{direction_centroid} column already exist
in the input \code{DT}, because they will be overwritten.

See details for appending outputs using modify-by-reference in the
\href{https://docs.ropensci.org/spatsoc/articles/faq.html}{FAQ}.
}
\description{
\code{direction_to_centroid} calculates the direction of each relocation to
the centroid of the spatiotemporal group identified by \code{group_pts}. The
function accepts a \code{data.table} with relocation data appended with a
\code{group} column from \code{group_pts} and centroid columns from
\code{centroid_group}. Relocation data should be in planar coordinates
provided in two columns representing the X and Y coordinates.
}
\details{
The \code{DT} must be a \code{data.table}. If your data is a
\code{data.frame}, you can convert it by reference using
\code{\link[data.table:setDT]{data.table::setDT}} or by reassigning using
\code{\link[data.table:data.table]{data.table::data.table}}.

This function expects a \code{group} column present generated with the
\code{group_pts} function and centroid coordinate columns generated with the
\code{centroid_group} function. The \code{coords} and \code{group} arguments
expect the names of columns in \code{DT} which correspond to the X and Y
coordinates and group columns.
}
\examples{
# Load data.table
library(data.table)
\dontshow{data.table::setDTthreads(1)}

# Read example data
DT <- fread(system.file("extdata", "DT.csv", package = "spatsoc"))

# Cast the character column to POSIXct
DT[, datetime := as.POSIXct(datetime, tz = 'UTC')]

# Temporal grouping
group_times(DT, datetime = 'datetime', threshold = '20 minutes')

# Spatial grouping with timegroup
group_pts(DT, threshold = 5, id = 'ID',
          coords = c('X', 'Y'), timegroup = 'timegroup')

# Calculate group centroid
centroid_group(DT, coords = c('X', 'Y'), group = 'group', na.rm = TRUE)

# Calculate direction to group centroid
direction_to_centroid(DT, coords = c('X', 'Y'))
}
\references{
See example of using direction to group centroid:
\itemize{
\item \doi{doi:10.1016/j.cub.2017.08.004}
}
}
\seealso{
\link{centroid_group}, \link{group_pts}

Other Direction functions: 
\code{\link{direction_group}()},
\code{\link{direction_polarization}()},
\code{\link{direction_step}()},
\code{\link{direction_to_leader}()},
\code{\link{edge_alignment}()},
\code{\link{edge_delay}()},
\code{\link{edge_direction}()},
\code{\link{edge_dist}()},
\code{\link{edge_zones}()},
\code{\link{leader_direction_group}()},
\code{\link{leader_edge_delay}()}

Other Centroid functions: 
\code{\link{centroid_dyad}()},
\code{\link{centroid_fusion}()},
\code{\link{centroid_group}()},
\code{\link{distance_to_centroid}()}
}
\concept{Centroid functions}
\concept{Direction functions}
