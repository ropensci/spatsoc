% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edge_direction.R
\name{edge_direction}
\alias{edge_direction}
\title{Direction based edge-lists}
\usage{
edge_direction(
  edges = NULL,
  DT = NULL,
  id = NULL,
  coords = NULL,
  crs = NULL,
  timegroup = "timegroup",
  projection = NULL
)
}
\arguments{
\item{edges}{edge-list generated generated by \code{edge_dist} or
\code{edge_nn}, with dyad ID column generated by \code{dyad_id}}

\item{DT}{input data.table with timegroup column generated with
\code{group_times} matching the input data.table used to generate the edge
list with \code{edge_nn} or \code{edge_dist}}

\item{id}{character string of ID column name}

\item{coords}{character vector of X coordinate and Y coordinate column names.
Note: the order is assumed X followed by Y column names.}

\item{crs}{numeric or character defining the coordinate reference
system to be passed to \link[sf:st_crs]{sf::st_crs}. For example, either
\code{crs = "EPSG:32736"} or \code{crs = 32736}.}

\item{timegroup}{character string of timegroup column name, default "timegroup"}

\item{projection}{(deprecated) use crs argument instead}
}
\value{
\code{edge_direction} returns the input \code{edges} appended with a
"direction_dyad" column representing the direction between ID1 and ID2 in
radians. A value of NaN is returned when the coordinates of ID1 equal the
coordinates of ID2.

An error is returned if there are any missing values in coordinates for the
focal individual or the group leader, as the underlying direction function
(\code{\link[lwgeom:st_geod_azimuth]{lwgeom::st_geod_azimuth()}}) does not accept missing values.

If the "direction" column is found in input DT, it will be retained for
ID1 in the output for use in downstream functions (eg. \code{edge_zones}).

Note: due to the merge required within this function, the output needs to be
reassigned unlike some other \code{spatsoc} functions like \code{dyad_id}
and \code{group_pts}. See details in
\href{https://docs.ropensci.org/spatsoc/articles/faq.html}{FAQ}.
}
\description{
\code{edge_direction} returns edge lists defined by the direction between
individuals. The function expects a distance based edge-list generated by
\code{edge_nn} or \code{edge_dist} and a \code{data.table} with relocation
data appended with a \code{timegroup} column from \code{group_times}.
It is required to use the argument \code{fillNA = FALSE} for
\code{edge_dist} to ensure there are no NAs in the coordinate columns.
Relocation data should be in two columns representing the X and Y coordinates.
}
\details{
The \code{edges} and \code{DT} must be \code{data.table}s. If your data is a
\code{data.frame}, you can convert it by reference using
\code{\link[data.table:setDT]{data.table::setDT()}} or by reassigning using
\code{\link[data.table:data.table]{data.table::data.table()}}.

The \code{crs} argument expects a character string or numeric defining
the coordinate reference system to be passed to \link[sf:st_crs]{sf::st_crs}. For example,
for UTM zone 36S (EPSG 32736), the crs argument is
\code{crs = "EPSG:32736"} or \code{crs = 32736}. See
\url{https://spatialreference.org} for a list of EPSG codes.

The \code{edges} and \code{DT} are internally merged in this function using
the columns \code{id}, \code{dyadID} and \code{timegroup}. This function
expects a \code{dyadID} present, generated with the \code{dyad_id} function.
The \code{id}, \code{coords} and \code{timegroup} arguments expect the names
of columns which correspond to the ID, X and Y coordinates and timegroup
columns.
}
\examples{
# Load data.table
library(data.table)
\dontshow{data.table::setDTthreads(1)}

# Read example data
DT <- fread(system.file("extdata", "DT.csv", package = "spatsoc"))

# Cast the character column to POSIXct
DT[, datetime := as.POSIXct(datetime, tz = 'UTC')]

# Temporal grouping
group_times(DT, datetime = 'datetime', threshold = '20 minutes')

# Edge list generation
edges <- edge_dist(
    DT,
    threshold = 100,
    id = 'ID',
    coords = c('X', 'Y'),
    timegroup = 'timegroup',
    returnDist = TRUE,
    fillNA = FALSE
  )

# Generate dyad id
dyad_id(edges, id1 = 'ID1', id2 = 'ID2')

# Direction based edge-lists
dyad_directions <- edge_direction(
  edges,
  DT,
  id = 'ID',
  coords = c('X', 'Y'),
  crs = 32736,
  timegroup = 'timegroup'
)

print(dyad_directions)
}
\references{
See examples of measuring the direction between individuals:
\itemize{
\item \doi{doi:10.1098/rsif.2013.0529}
\item \doi{doi:10.1098/rstb.2019.0380}
\item \doi{doi:10.1111/jfb.15315}
}
}
\seealso{
\link{dyad_id}, \link{edge_dist}, \link{edge_nn}, \link{group_times},
\code{\link[lwgeom:st_geod_azimuth]{lwgeom::st_geod_azimuth()}}

Other Edge-list generation: 
\code{\link{edge_alignment}()},
\code{\link{edge_delay}()},
\code{\link{edge_dist}()},
\code{\link{edge_nn}()}

Other Direction functions: 
\code{\link{direction_group}()},
\code{\link{direction_polarization}()},
\code{\link{direction_step}()},
\code{\link{direction_to_centroid}()},
\code{\link{direction_to_leader}()},
\code{\link{edge_alignment}()},
\code{\link{edge_delay}()},
\code{\link{edge_dist}()},
\code{\link{edge_zones}()},
\code{\link{leader_direction_group}()},
\code{\link{leader_edge_delay}()}
}
\concept{Direction functions}
\concept{Edge-list generation}
