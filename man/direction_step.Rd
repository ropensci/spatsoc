% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/direction_step.R
\name{direction_step}
\alias{direction_step}
\title{Direction step}
\usage{
direction_step(
  DT = NULL,
  id = NULL,
  coords = NULL,
  projection = NULL,
  splitBy = NULL
)
}
\arguments{
\item{DT}{input data.table}

\item{id}{character string of ID column name}

\item{coords}{character vector of X coordinate and Y coordinate column names.
Note: the order is assumed X followed by Y column names.}

\item{projection}{numeric or character defining the coordinate reference
system to be passed to \link[sf:st_crs]{sf::st_crs}. For example, either
\code{projection = "EPSG:32736"} or \code{projection = 32736}.}

\item{splitBy}{(optional) character string or vector of grouping column
name(s) upon which the grouping will be calculated}
}
\value{
\code{direction_step} returns the input \code{DT} appended with
a direction column with units set to radians using the \code{units}
package.

This column represents the azimuth between the sequence of points for
each individual computed using \code{lwgeom::st_geod_azimuth}. Note, the
order of points is not modified by this function and therefore it is
crucial the user sets the order of rows to their specific question
before using \code{direction_step}. In addition, the direction column
will include an \code{NA} value for the last point in each sequence of
points since there is no future point to calculate a direction to.

A message is returned when a direction column are already exists in
the input \code{DT}, because it will be overwritten.

See details for appending outputs using modify-by-reference in the
\href{https://docs.ropensci.org/spatsoc/articles/faq.html}{FAQ}.
}
\description{
\code{direction_step} calculates the direction of movement steps in radians.
The function expects a \code{data.table} with relocation data and individual
identifiers. Relocation data should be in two columns representing the X and
Y coordinates. Note the order of rows is not modified by this function and
therefore users must be cautious to set it explicitly. See example for one
approach to setting order of rows using a datetime field.
}
\details{
The \code{DT} must be a \code{data.table}. If your data is a
\code{data.frame}, you can convert it by reference using
\code{\link[data.table:setDT]{data.table::setDT()}} or by reassigning using
\code{\link[data.table:data.table]{data.table::data.table()}}.

The \code{id}, \code{coords}, and optional \code{splitBy} arguments expect
the names of a column in \code{DT} which correspond to the individual
identifier, X and Y coordinates, and additional grouping columns.

The \code{projection} argument expects a character string or numeric defining
the coordinate reference system to be passed to \link[sf:st_crs]{sf::st_crs}. For example,
for UTM zone 36S (EPSG 32736), the projection argument is
\code{projection = "EPSG:32736"} or \code{projection = 32736}. See
\url{https://spatialreference.org} for a list of EPSG codes.

The \code{splitBy} argument offers further control over grouping. If within
your \code{DT}, you have distinct sampling periods for each individual, you
can provide the column name(s) which identify them to \code{splitBy}. The
direction calculation by \code{direction_step} will only consider rows within
each \code{id} and \code{splitBy} subgroup.
}
\examples{
# Load data.table
library(data.table)
\dontshow{data.table::setDTthreads(1)}

# Read example data
DT <- fread(system.file("extdata", "DT.csv", package = "spatsoc"))

# Cast the character column to POSIXct
DT[, datetime := as.POSIXct(datetime, tz = 'UTC')]

# Set order using data.table::setorder
setorder(DT, datetime)

# Calculate direction
direction_step(
  DT = DT,
  id = 'ID',
  coords = c('X', 'Y'),
  projection = 32736
)

# Example result for East, North, West, South steps
example <- data.table(
  X = c(0, 5, 5, 0, 0),
  Y = c(0, 0, 5, 5, 0),
  step = c('E', 'N', 'W', 'S', NA),
  ID = 'A'
)

direction_step(example, 'ID', c('X', 'Y'), projection = 4326)
example[, .(step, direction, units::set_units(direction, 'degree'))]
}
\seealso{
\code{\link[amt:steps]{amt::direction_abs()}}, \code{\link[geosphere:bearing]{geosphere::bearing()}}

Other Direction functions: 
\code{\link{direction_group}()},
\code{\link{direction_polarization}()},
\code{\link{direction_to_centroid}()},
\code{\link{direction_to_leader}()},
\code{\link{edge_alignment}()},
\code{\link{edge_delay}()},
\code{\link{edge_direction}()},
\code{\link{edge_dist}()},
\code{\link{edge_zones}()},
\code{\link{leader_direction_group}()},
\code{\link{leader_edge_delay}()}
}
\concept{Direction functions}
