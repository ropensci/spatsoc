% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/leader_direction_group.R
\name{leader_direction_group}
\alias{leader_direction_group}
\title{Leadership along group direction}
\usage{
leader_direction_group(
  DT = NULL,
  group_direction = "group_direction",
  coords = NULL,
  group = "group",
  return_rank = FALSE,
  ties.method = "average"
)
}
\arguments{
\item{DT}{input data.table with group direction columns generated by
\code{direction_group} and centroid columns generated by
\code{centroid_group}}

\item{group_direction}{group_direction column name generated using
\code{direction_group}, default 'group_direction'}

\item{coords}{character vector of X coordinate and Y coordinate column names.
Note: the order is assumed X followed by Y column names.}

\item{group}{group column name, generated by \code{group_pts}, default
'group'}

\item{return_rank}{boolean if rank distance should also be returned, default
FALSE}

\item{ties.method}{see \code{\link[data.table:frank]{?data.table::frank}}}
}
\value{
\code{leader_direction_group} returns the input \code{DT} appended
with a \code{position_group_direction} column indicating the position along
the group direction in the units of the projection and, optionally when
\code{return_rank = TRUE}, a \code{rank_position_group_direction} column
indicating the ranked position along the group direction.

A message is returned when \code{position_group_direction} or
\code{rank_position_group_direction} columns already exist in the input
\code{DT}, because they will be overwritten.

See details for appending outputs using modify-by-reference in the
\href{https://docs.ropensci.org/spatsoc/articles/faq.html}{FAQ}.
}
\description{
Given the mean direction of a group of individuals,
\code{leader_direction_group} shifts the coordinate system to a new origin at
the group centroid and rotates the coordinate system by the mean direction to
return each individual's position along the mean direction, representing
leadership in terms of the front-back position in each group's mean
direction.
}
\details{
The function accepts a \code{data.table} with relocation data appended with a
\code{group_direction} column from \code{direction_group} and group centroid
columns from \code{centroid_group}. Relocation data should be in two columns
representing the X and Y coordinates.

The \code{DT} must be a \code{data.table}. If your data is a
\code{data.frame}, you can convert it by reference using
\code{\link[data.table:setDT]{data.table::setDT}} or by reassigning using
\code{\link[data.table:data.table]{data.table::data.table}}.

The \code{group_direction} argument expects the names of columns in \code{DT}
which correspond to the mean group direction generated by
\code{direction_group}. The mean group direction column is expected in units
of radians. The \code{coords} arguments expects the names of columns in
\code{DT} which correspond to the X and Y coordinate columns. The
\code{return_rank} argument controls if the rank of each individual's
distance to the group centroid is also returned. If \code{return_rank} is
TRUE, the \code{group} argument is required to specify the group column
generated by \code{group_pts}. The \code{ties.method} argument is passed to
\code{data.table::frank}, see details at
\code{\link[data.table:frank]{?data.table::frank}}.
}
\examples{
# Load data.table
library(data.table)
\dontshow{data.table::setDTthreads(1)}

# Read example data
DT <- fread(system.file("extdata", "DT.csv", package = "spatsoc"))

# (Subset example data to reduce example run time)
DT <- DT[year(datetime) == 2016]

# Cast the character column to POSIXct
DT[, datetime := as.POSIXct(datetime, tz = 'UTC')]

# Temporal grouping
group_times(DT, datetime = 'datetime', threshold = '20 minutes')

# Spatial grouping with timegroup
group_pts(DT, threshold = 50, id = 'ID',
          coords = c('X', 'Y'), timegroup = 'timegroup')

# Calculate direction at each step
direction_step(
  DT = DT,
  id = 'ID',
  coords = c('X', 'Y'),
  projection = 32736
)

# Calculate group centroid
centroid_group(DT, coords = c('X', 'Y'))

# Calculate group direction
direction_group(DT)

# Calculate leader in terms of position along group direction
leader_direction_group(DT, coords = c('X', 'Y'))
}
\references{
See examples of measuring leadership along group direction (also called
forefront index):
\itemize{
\item \doi{doi:10.1371/journal.pone.0036567}
\item \doi{doi:10.1111/jfb.15315}
\item \doi{doi:10.1098/rspb.2021.0839}
}
}
\seealso{
\code{\link{direction_group}}, \code{\link{centroid_group}}

Other Leadership functions: 
\code{\link{direction_to_leader}()},
\code{\link{leader_edge_delay}()}

Other Direction functions: 
\code{\link{direction_group}()},
\code{\link{direction_polarization}()},
\code{\link{direction_step}()},
\code{\link{direction_to_centroid}()},
\code{\link{direction_to_leader}()},
\code{\link{edge_alignment}()},
\code{\link{edge_delay}()},
\code{\link{edge_dist}()},
\code{\link{leader_edge_delay}()}
}
\concept{Direction functions}
\concept{Leadership functions}
